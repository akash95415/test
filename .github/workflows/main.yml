name: Ollama Benchmark

on:
  workflow_dispatch: # run manually from Actions tab

jobs:
  benchmark:
    runs-on: macos-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Run Ollama benchmark script
        shell: bash
        run: |
          set -euo pipefail

          MODEL="llama3:8b"
          PROMPT="Benchmark: generate 128 tokens of simple text to measure speed."
          OLLAMA_PORT=11434

          echo "1) Install jq..."
          brew install jq

          echo "2) Install Ollama..."
          brew install ollama

          echo "3) Start Ollama server..."
          nohup ollama serve >/tmp/ollama.log 2>&1 &
          sleep 5

          echo "4) Pull model: $MODEL"
          ollama pull "$MODEL"

          echo "5) Generate and capture metrics..."
          JSON_RESP=$(curl -s -X POST "http://localhost:${OLLAMA_PORT}/api/generate" \
            -H 'Content-Type: application/json' \
            -d "{\"model\":\"${MODEL}\",\"prompt\":\"${PROMPT}\",\"stream\":false}")

          echo "Response preview:"
          echo "$JSON_RESP" | head -c 800
          echo

          EVAL_COUNT=$(echo "$JSON_RESP" | jq -r '.eval_count // .generations[0].eval_count // empty')
          EVAL_DURATION_NS=$(echo "$JSON_RESP" | jq -r '.eval_duration // .generations[0].eval_duration // empty')

          if [ -n "$EVAL_COUNT" ] && [ -n "$EVAL_DURATION_NS" ]; then
            DURATION_S=$(awk -v ns="$EVAL_DURATION_NS" 'BEGIN{printf "%.6f", ns/1e9}')
            TOKENS_PER_SEC=$(awk -v t="$EVAL_COUNT" -v s="$DURATION_S" 'BEGIN{ if (s>0) printf "%.2f", t/s; else print "inf"}')
            echo "=== Metrics ==="
            echo "eval_count: $EVAL_COUNT"
            echo "eval_duration_ns: $EVAL_DURATION_NS"
            echo "eval_duration_s: $DURATION_S"
            echo "tokens/sec: $TOKENS_PER_SEC"
          else
            echo "No eval_count/eval_duration found. Full JSON saved."
            echo "$JSON_RESP" > /tmp/ollama_resp.json
          fi
